# 1password connect/opeator deployment
# yes this is ridiculously long; it's mostly the RBAC configuration

# deploying:
# op connect server create prod-fly-arn-k8s --vaults acnop6sxzggtzwha2bulnpjj6i
# cat 1password-credentials.json | base64 | \  tr '/+' '_-' | tr -d '=' | tr -d '\n' > 1password-credentials-encoded
# mv 1password-credentials-encoded 1password-credentials.json
# kubectl -n onepassword create secret generic op-credentials --from-file=1password-credentials.json
# kubectl -n onepassword create secret generic onepassword-token --from-literal=token=$(op connect token create prod-fly-arn-k8s-operator --server EDGJXZGNP5AI5N5D24XJE6CNRU --vault acnop6sxzggtzwha2bulnpjj6i)
# kubectl apply -f k8s/1password.yaml

apiVersion: v1
kind: Namespace
metadata:
  name: onepassword
---
apiVersion: v1
kind: Service
metadata:
  name: onepassword-connect
  namespace: onepassword
spec:
  ipFamilies:
  - IPv6
  ipFamilyPolicy: SingleStack
  ports:
  - name: connect-sync
    port: 8081
    protocol: TCP
    targetPort: 8081
  - name: connect-api
    port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    app: onepassword-connect
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: onepassword-connect
  namespace: onepassword
spec:
  selector:
    matchLabels:
      app: onepassword-connect
  template:
    metadata:
      labels:
        app: onepassword-connect
    spec:
      initContainers:
      - command: ["sh", "-c", "mkdir /root/.op/data && chmod -R 700 /root/.op"]
        image: alpine:latest
        imagePullPolicy: Always
        name: fix-permissions
        volumeMounts:
        - mountPath: /root/.op
          name: shared-data

      containers:
#      - name: test
#        image: alpine:latest
#        command: ["/bin/sleep", "inf"]

      - name: connect-api
        image: 1password/connect-api:1.7.3
        imagePullPolicy: IfNotPresent
        env:
        - name: OP_SESSION
          valueFrom:
            secretKeyRef:
              key: 1password-credentials.json
              name: op-credentials
        - name: OP_BUS_PORT
          value: "11220"
        - name: OP_BUS_PEERS
          value: localhost:11221
        - name: OP_HTTP_PORT
          value: "8080"
        - name: OP_LOG_LEVEL
          value: info
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /heartbeat
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 15
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 1
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /health
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 15
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          limits:
            memory: 128Mi
          requests:
            cpu: 200m
        securityContext:
          allowPrivilegeEscalation: false
          runAsGroup: 0
          runAsUser: 0
        volumeMounts:
        - mountPath: /root/.op
          name: shared-data

      - name: connect-sync
        image: 1password/connect-sync:1.7.3
        imagePullPolicy: IfNotPresent
        env:
        - name: OP_HTTP_PORT
          value: "8081"
        - name: OP_SESSION
          valueFrom:
            secretKeyRef:
              key: 1password-credentials.json
              name: op-credentials
        - name: OP_BUS_PORT
          value: "11221"
        - name: OP_BUS_PEERS
          value: localhost:11220
        - name: OP_LOG_LEVEL
          value: info
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /heartbeat
            port: 8081
            scheme: HTTP
          initialDelaySeconds: 15
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 1
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /health
            port: 8081
            scheme: HTTP
          initialDelaySeconds: 15
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
          runAsGroup: 0
          runAsUser: 0
        volumeMounts:
        - mountPath: /root/.op
          name: shared-data

      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30

      volumes:
      - emptyDir: {}
        name: shared-data
      - name: credentials
        secret:
          defaultMode: 420
          secretName: op-credentials
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: onepassword-connect-operator
  namespace: onepassword
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: manager-role
  namespace: onepassword
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  - endpoints
  - events
  - namespaces
  - persistentvolumeclaims
  - pods
  - secrets
  - services
  - services/finalizers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
- apiGroups:
  - apps
  resources:
  - daemonsets
  - deployments
  - replicasets
  - statefulsets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - apps
  resources:
  - deployments
  - replicasets
  verbs:
  - get
- apiGroups:
  - apps
  resources:
  - deployments/finalizers
  verbs:
  - update
- apiGroups:
  - apps
  resourceNames:
  - onepassword-connect-operator
  resources:
  - deployments/finalizers
  verbs:
  - update
- apiGroups:
  - apps
  resources:
  - deployments/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - list
  - update
- apiGroups:
  - monitoring.coreos.com
  resources:
  - servicemonitors
  verbs:
  - create
  - get
- apiGroups:
  - onepassword.com
  resources:
  - '*'
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - onepassword.com
  resources:
  - onepassworditems
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - onepassword.com
  resources:
  - onepassworditems/finalizers
  verbs:
  - update
- apiGroups:
  - onepassword.com
  resources:
  - onepassworditems/status
  verbs:
  - get
  - patch
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: manager-rolebinding
  namespace: onepassword
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: manager-role
subjects:
- kind: ServiceAccount
  name: onepassword-connect-operator
  namespace: onepassword
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: onepassword-connect-operator
  namespace: onepassword
spec:
  selector:
    matchLabels:
      name: onepassword-connect-operator
  replicas: 1
  template:
    metadata:
      labels:
        name: onepassword-connect-operator
    spec:
      securityContext:
        runAsNonRoot: true
      containers:
      - command:
        - /manager
        args:
        - --leader-elect
        image: 1password/onepassword-operator:latest
        name: manager
        env:
          - name: WATCH_NAMESPACE
            value: "default,kube-system"
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: OPERATOR_NAME
            value: "onepassword-connect-operator"
          - name: OP_CONNECT_HOST
            value: "http://onepassword-connect.onepassword.svc.cluster.local:8080"
          - name: POLLING_INTERVAL
            value: "10"
          - name: OP_CONNECT_TOKEN
            valueFrom:
              secretKeyRef:
                name: onepassword-token
                key: token
          - name: AUTO_RESTART
            value: "false"
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - "ALL"
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 64Mi
      serviceAccountName: onepassword-connect-operator
      terminationGracePeriodSeconds: 10
---
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.13.0
  name: onepassworditems.onepassword.com
spec:
  group: onepassword.com
  names:
    kind: OnePasswordItem
    listKind: OnePasswordItemList
    plural: onepassworditems
    singular: onepassworditem
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: OnePasswordItem is the Schema for the onepassworditems API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: OnePasswordItemSpec defines the desired state of OnePasswordItem
            properties:
              itemPath:
                type: string
            type: object
          status:
            description: OnePasswordItemStatus defines the observed state of OnePasswordItem
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transit from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: Human-readable message indicating details about
                        last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of job condition, Completed.
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
            required:
            - conditions
            type: object
          type:
            description: 'Kubernetes secret type. More info: https://kubernetes.io/docs/concepts/configuration/secret/#secret-types'
            type: string
        type: object
    served: true
    storage: true
    subresources:
      status: {}
